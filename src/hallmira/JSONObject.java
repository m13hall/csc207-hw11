package hallmira;

import java.util.ArrayList;
import hallmira.JSONParser;

/**
 * 
 * @author hallmira
 * @author kelleyan
 * 
 *         represents an object generated by the JSON notation system
 * 
 */
public class JSONObject {
    /**
     * contains all the fields of the obejct
     */
    // Fields
    ArrayList<JSONPair> pairs;

    // Constructors
    public JSONObject(ArrayList<JSONPair> pairs) {
	this.pairs = pairs;
    }// JSONObject

    public JSONObject(JSONParser parser) {
	this.pairs = new ArrayList<JSONPair>();
    }// JSONObject

    /**
     * 
     * @param parser
     *            adds a new pair to an object
     */
    // methods
    public void addPair(JSONParser parser) {
	this.pairs.add(new JSONPair(parser));
    } // addPair

    public String toString() {
	if (this.pairs.equals(new ArrayList<JSONPair>())) {
	    return "{}";
	}// if
	StringBuffer result = new StringBuffer("{");
	for (JSONPair pair : this.pairs) {
	    result.append(pair.toString() + ",");
	}// for
	return result.substring(0, result.length() - 1) + "}";
	// remove the last comma and add a }
    } // toString

    public class JSONPair {
	// Fields
	String name;
	Object value;

	// constructors
	public JSONPair(String name, Object value) {
	    this.name = name;
	    this.value = value;
	}

	public JSONPair(JSONParser parser) {
	    this.name = (String) parser.parse();
	    parser.current++; // skip over the ":"
	    this.value = parser.parse(); // change to look for the right
	}

	// methods
	public String name() {
	    return this.name;
	} // name

	public Object value() {
	    return this.value;
	} // value

	public String toString() {
	    String value = "";
	    if (this.value.getClass().equals(String.class)) {
		value = "\"" + this.value + "\"";
	    } else if (this.value.equals(null)) {
		value = "\"\"";
	    } else {
		value = this.value.toString();
	    } // if/else
	    return "\"" + this.name + "\":" + value;
	} // toString

    }// JSONPair
} // JSONObject